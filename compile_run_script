#!/bin/bash

module load hdf5
module load openmpi
module load netcdf

echo "NOTE: This is a *very* crude script with an awful series of nested if loops"
echo "that is used to compile+run test problems. It might not look great, but it works"
echo "for the most part. The resolutions and spatial dimensions you provide are"
echo "assumed to already have a corresponding par file to go with them, i.e., you"
echo "might have to create your own parfiles depending on what options you want"
echo "Default options are shown in the README.md files in each problem directory."
echo "--------------------------------------------------------------------"
echo "Problem options:"
echo "(1) Acoustic Wave"
echo "(2) Linear Wave MHD: Slow Magnetosonic mode"
echo "(3) Linear Wave MHD: Fast Magnetosonic mode"
echo "(4) Linear Wave MHD: Alfven speed"
echo "(5) Brio & Wu Shock tube (1D or 2D)"
echo "(6) Orszag Tang Vortex (2D)"
echo "(7) Divergence cleaning test (2D)"
echo "--------------------------------------------------------------------"
read -p "Problem option number (e.g., Acoustic Wave = 1):     " problem_OPTION
read -p "(if applicable) Problem dimensionality (1=1D, 2=2D): " dimension
read -p "Spatial resolution in x-direction:                   " nX
dataDIR=nX_${nX}_DIR
if [ ${dimension} -eq 2 ]; then
	read -p "Spatial resolution in y-direction:                   " nY
	dataDIR=nX_${nX}_nY_${nY}_DIR
fi

# PROBLEM OPTIONS
if [ ${problem_OPTION} -eq 1 ]; then	
	./setup AcousticWave -auto -1d -maxblocks=100 -nxb=${nX} -site=dpochik-osc +hdf5 +cartesian +spark +nofbs useTVD=true -parfile=flash_${nX}.par
	workDIR=Flashwork_1D_AcousticWave_DIR
else
	if [ ${problem_OPTION} -eq 2 ]; then
		./setup LinearWave_MHD_FastMagnetosonic -auto -1d -maxblocks=100 -nxb=${nX} -site=dpochik-osc +hdf5 +cartesian +spark useGLM=true +nofbs useTVD=true -parfile=flash_${nX}.par
		workDIR=Flashwork_1D_LinearWave_MHD_FM_DIR
	else
		if [ ${problem_OPTION} -eq 3 ]; then
			./setup LinearWave_MHD_AlfvenSpeed -auto -1d -maxblocks=100 -nxb=${nX} -site=dpochik-osc +hdf5 +cartesian +spark useGLM=true +nofbs useTVD=true -parfile=flash_${nX}.par
			workDIR=Flashwork_1D_LinearWave_MHD_AS_DIR
		else
			if [ ${problem_OPTION} -eq 4 ]; then
				./setup LinearWave_MHD_SlowMagnetosonic -auto -1d -maxblocks=100 -nxb=${nX} -site=dpochik-osc +hdf5 +cartesian +spark useGLM=true +nofbs useTVD=true -parfile=flash_${nX}.par
				workDIR=Flashwork_1D_LinearWave_MHD_SM_DIR
			else
				if [ ${problem_OPTION} -eq 5 ]; then	
					if [ ${dimension} -eq 1 ]; then
						./setup BrioWuShockTube -auto -1d -maxblocks=100 -nxb=${nX} -site=dpochik-osc +hdf5 +cartesian +spark useGLM=true +nofbs useTVD=true -parfile=flash_${nX}.par
						workDIR=Flashwork_1D_BrioWu_DIR
					else
						if [ ${dimension} -eq 2 ]; then	
							./setup BrioWuShockTube -auto -2d -maxblocks=100 -nxb=${nX} -nyb=${nY} -site=dpochik-osc +hdf5 +cartesian +spark useGLM=true +nofbs useTVD=true -parfile=flash_${nX}_${nY}.par
							workDIR=Flashwork_2D_BrioWu_DIR
						else
							echo "Incorrect dimensionality specified. Exiting script"
							exit
						fi
					fi
				else
					if [ ${problem_OPTION} -eq 6 ]; then
						if [ ! ${dimension} -eq 2 ]; then
							echo "Incompatible dimension + problem choice."
							echo "Problem is only capable of running in 2D."
							echo "Exiting script"
							exit
						fi
							./setup OrszagTang -auto -2d -maxblocks=100 -nxb=${nX} -nyb=${nY} -site=dpochik-osc +hdf5 +cartesian useTVD=true +nofbs -parfile=flash_${nX}_${nY}.par useGLM=true +spark
							workDIR=Flashwork_2D_OrszagTang_DIR
					else
						if [ ${problem_OPTION} -eq 7 ]; then
							if [ ! ${dimension} -eq 2 ]; then
								echo "Incompatible dimension + problem choice."
								echo "Problem is only capable of running in 2D."
								echo "Exiting script"
								exit
							fi
							./setup DivergenceCleaningTest -auto -2d -maxblocks=100 -nxb=${nX} -nyb=${nY} -site=dpochik-osc +hdf5 +cartesian useTVD=true +nofbs -parfile=flash_${nX}_${nY}.par useGLM=true +spark
							workDIR=Flashwork_2D_DivBTest_DIR
						else
							echo "Incorrect problem option set. Exiting script."
							exit
						fi
					fi
				fi
			fi
		fi
	fi
fi

# Creates directory under which data and log files are stored
if [ ! -d "${workDIR}" ]; then
	echo "Making work directory"
	mkdir ${workDIR}
fi

cd object
make -j8

cd ../
# Creates data directory
if [ ! -d "${workDIR}/${dataDIR}" ]; then
	echo "Making data directory"
	mkdir ${workDIR}/${dataDIR}
fi

# Creates a directory for tar files to be stored in
if [ ! -d "${workDIR}/tar_DIR" ]; then
	echo "Making tar_DIR"
	mkdir ${workDIR}/tar_DIR
fi

cp object/flash.par object/flashx ${workDIR}/${dataDIR}/
