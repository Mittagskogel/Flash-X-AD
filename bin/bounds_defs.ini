[loop_end_3d]
definition =
        end do
      end do
   end do

[loop_3d]
args=limits,i1,i2,i3
definition =
    do i3=limits(LOW,KAXIS),limits(HIGH,KAXIS)
         do i2=limits(LOW,JAXIS),limits(HIGH,JAXIS)
             do i1=limits(LOW,IAXIS),limits(HIGH,IAXIS)


[loop_3d_plus]
args=limits,i1,i2,i3,p1,p2,p3
definition =
    do i3=limits(LOW,KAXIS),limits(HIGH,KAXIS)+K3D*p3
         do i2=limits(LOW,JAXIS),limits(HIGH,JAXIS)+K2D*p2
             do i1=limits(LOW,IAXIS),limits(HIGH,IAXIS)+p1


[bounds_3d]
args=limits
definition =
    limits(LOW,IAXIS):limits(HIGH,IAXIS),&
    limits(LOW,JAXIS):limits(HIGH,JAXIS),&
    limits(LOW,KAXIS):limits(HIGH,KAXIS)

[bounds_3d_plus]
args=limits,p1,p2,p3
definition =
    limits(LOW,IAXIS):limits(HIGH,IAXIS)+p1,&
    limits(LOW,JAXIS):limits(HIGH,JAXIS)+p2*K2D,&
    limits(LOW,KAXIS):limits(HIGH,KAXIS)+p3*K3D

[bounds_1d]
args=limits,x1
definition =
    limits(LOW,x1):limits(HIGH,x1)


[mapLimits]
args=blimits,blimitsGC,mlimits,mlimitsGC
definition=
   mlimits(LOW,:)=blimits(LOW,:)-blimitsGC(LOW,:)+1
   mlimits(HIGH,:)=blimits(HIGH,:)-blimits(LOW,:)+mlimits(LOW,:)
   mlimitsGC(LOW,:)=1
   mlimitsGC(HIGH,:)=blimitsGC(HIGH,:)-blimitsGC(LOW,:)+1
  

