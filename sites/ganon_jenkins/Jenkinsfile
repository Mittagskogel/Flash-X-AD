pipeline {
    triggers { pollSCM('') }  // Run tests whenever a new commit is detected.
    agent { dockerfile { dir 'sites/ganon_jenkins' } } // Use the Dockerfile defined in the root Flash-X directory
    environment {
        pathToSimulations = '../source/Simulation/SimulationMain' // Needed in order for Flash-X-Test to know where to find files
	HOME="${env.WORKSPACE}"
	// Get rid of Read -1, expected <someNumber>, errno =1 error
        // See https://github.com/open-mpi/ompi/issues/4948
        OMPI_MCA_btl_vader_single_copy_mechanism = 'none'
    }
    stages {

        //=============================//
    	// Set up submodules and amrex //
        //=============================//
    	stage('Prerequisites'){ steps{
	    withCredentials([gitUsernamePassword(credentialsId: 'github_personal_access_token', gitToolName: 'git-tool')]) {
	        sh 'git submodule update --init'
		sh 'pip3 install git+https://github.com/Flash-X/Flash-X-Test.git@89a8d49c831db6da9f87095068c2e766bd5bd458'
	    }
	    dir('lib/amrex/source'){
	        sh '''
	        ./configure --prefix=install/1D --dim=1; make -j8; make install
	        ./configure --prefix=install/2D --dim=2; make -j8; make install
	        ./configure --prefix=install/3D --dim=3; make -j8; make install
	        '''
	    }
	    sh 'mpicc -v'
	}}


	//==================================================//
        // Run all of the official tests using Flash-X-Test //
	//==================================================//
	// The following should replace individual tests once PR#314 is pulled
        //stage('UnitTest'){ steps{
	//    sh ".local/bin/flashxtest init -z ${env.WORKSPACE} -s ganon_jenkins"
	//    sh ".local/bin/flashxtest setup-suite sites/ganon_jenkins/UnitTest.suite"
	//    sh ".local/bin/flashxtest run-suite"
	//}} //stage('UnitTest'){ steps{
        stage('UnitTest'){ stages {
	    
	    stage('Eos_helmholtz_3d_AMReX'){ steps{
		sh './setup unitTest/Eos/Helmholtz -site=ganon_jenkins -auto +amrex -3d +noio -objdir=${STAGE_NAME}'
		dir("${STAGE_NAME}"){
		    sh "make -j EXE=flash-exe"
                    sh "mpiexec -n 1 flash-exe"
                }
	    }}

	    stage('Eos_helmholtz_3d_pm4dev'){ steps{
		sh './setup unitTest/Eos/Helmholtz -site=ganon_jenkins -auto +pm4dev -3d +noio -objdir=${STAGE_NAME}'
		dir("${STAGE_NAME}"){
		    sh "make -j EXE=flash-exe"
                    sh "mpiexec -n 1 flash-exe"
                }
	    }}

	    stage('Eos_starkiller_3d_pm4dev'){ steps{
		sh './setup unitTest/Eos/Helmholtz/starkiller -site=ganon_jenkins -auto +pm4dev -3d +noio -objdir=${STAGE_NAME}'
		dir("${STAGE_NAME}"){
		    sh "make -j EXE=flash-exe"
		    sh "mpiexec -n 1 flash-exe"
                }
	    }}

	    stage('Eos_weaklib_3d_pm4dev'){ steps{
		sh './setup unitTest/Eos/WeakLib -site=ganon_jenkins -auto +pm4dev -3d +noio -objdir=${STAGE_NAME}'
		dir("${STAGE_NAME}"){
		    sh "make -j EXE=flash-exe"
		    sh "mpiexec -n 1 flash-exe"
                }
	    }}

	    stage('Gravity_AMR_2dCyl_Paramesh'){ steps{
		sh './setup unitTest/Eos/WeakLib unitTest/Gravity/Poisson3 -site=ganon_jenkins -auto -2d +cylindrical +newmpole -debug -maxblocks=600 +noio +pm4dev -objdir=${STAGE_NAME}'
		dir("${STAGE_NAME}"){
		    sh "make -j EXE=flash-exe"
                    sh "cp ${env.pathToSimulations}/unitTest/Gravity/Poisson3/flash_2dcyl.par flash.par"
		    sh "mpiexec -n 1 flash-exe"
                }
	    }}

	    stage('Gravity_AMR_3d_Paramesh'){ steps{
		sh './setup unitTest/Gravity/Poisson3 -site=ganon_jenkins -auto -3d +newmpole +uhd -debug -maxblocks=550 -nxb=8 -nyb=8 -nzb=8 -gridinterpolation=monotonic -objdir=${STAGE_NAME}'
		dir("${STAGE_NAME}"){
		    sh "make -j EXE=flash-exe"
		    sh "mpiexec -n 1 flash-exe"
                }
	    }}

	    stage('Grid_AMR_AMReX_2d_FluxCorrection'){ steps{
		sh './setup unitTest/Grid/Amrex/TestFluxCorrection -site=ganon_jenkins -auto -2d -nxb=8 -nyb=8 +noio +amrex -objdir=${STAGE_NAME}'
		dir("${STAGE_NAME}"){
		    sh "make -j EXE=flash-exe"
		    sh "mpiexec -n 1 flash-exe"
                }
	    }}

	    stage('Grid_AMR_AMReX_2d_FluxCorrection2'){ steps{
		sh './setup unitTest/Grid/Amrex/TestFluxCorrection2 -site=ganon_jenkins -auto -2d -nxb=8 -nyb=8 +noio +amrex -objdir=${STAGE_NAME}'
		dir("${STAGE_NAME}"){
		    sh "make -j EXE=flash-exe"
		    sh "mpiexec -n 1 flash-exe"
                }
	    }}

	    stage('Grid_AMR_AMReX_2d_Init'){ steps{
		sh './setup unitTest/Grid/Amrex/TestInit -site=ganon_jenkins -auto -2d -nxb=8 -nyb=4 +noio +amrex -objdir=${STAGE_NAME}'
		dir("${STAGE_NAME}"){
		    sh "make -j EXE=flash-exe"
		    sh "mpiexec -n 1 flash-exe"
                }
	    }}

	    //stage('Grid_AMR_AMReX_2d_Refine'){ steps{
		//sh './setup unitTest/Grid/Amrex/TestRefine -site=ganon_jenkins -auto -2d -nxb=8 -nyb=8 +noio +amrex -objdir=${STAGE_NAME}'
		//dir("${STAGE_NAME}"){
		    //sh "make -j EXE=flash-exe"
		    //sh "mpiexec -n 1 flash-exe"
                //}
	    //}}

	    stage('Grid_AMR_AMReX_2d_TestCyl'){ steps{
		sh './setup unitTest/Grid/Amrex/TestCyl2d -site=ganon_jenkins -auto -2d -nxb=8 -nyb=4 +noio +amrex -objdir=${STAGE_NAME}'
		dir("${STAGE_NAME}"){
		    sh "make -j EXE=flash-exe"
		    sh "mpiexec -n 1 flash-exe"
                }
	    }}

	    stage('GridAnomalousRefine_2d_AMReX'){ steps{
		sh './setup unitTest/Grid/AnomalousRefine -site=ganon_jenkins -auto -2d +spherical +amrex -nxb=8 -nyb=8 -unit=IO/IOMain/hdf5/serial/AM -objdir=${STAGE_NAME}'
		dir("${STAGE_NAME}"){
		    sh "make -j EXE=flash-exe"
		    sh "mpiexec -n 3 flash-exe"
                }
	    }}

	    stage('GridAnomalousRefine_2d_Paramesh'){ steps{
		sh './setup unitTest/Grid/AnomalousRefine -site=ganon_jenkins -auto -2d +spherical -nxb=8 -nyb=8 -objdir=${STAGE_NAME}'
		dir("${STAGE_NAME}"){
		    sh "make -j EXE=flash-exe"
		    sh "mpiexec -n 1 flash-exe"
                }
	    }}

	    stage('GridAnomalousRefine_2d_pm4AltMortonBittree'){ steps{
		sh './setup unitTest/Grid/AnomalousRefine -site=ganon_jenkins -auto -2d +spherical AltMorton=True Bittree=True -nxb=8 -nyb=8 -objdir=${STAGE_NAME}'
		dir("${STAGE_NAME}"){
		    sh "make -j EXE=flash-exe"
		    sh "mpiexec -n 1 flash-exe"
                }
	    }}

	    stage('IO_hdf5_3d_pm4dev'){ steps{
		sh './setup unitTest/IO -site=ganon_jenkins -auto --index-reorder -3d +cube16 +parallelIO nVars=25 -objdir=${STAGE_NAME}'
		dir("${STAGE_NAME}"){
		    sh "make -j EXE=flash-exe"
                    sh "cp ${env.pathToSimulations}/unitTest/IO/test_PM_3d_noparticles.par flash.par"
		    sh "mpiexec -n 4 flash-exe"
                }
	    }}

	    stage('LidDrivenCavity_AMReX_2d'){ steps{
		sh './setup incompFlow/LidDrivenCavity -site=ganon_jenkins -auto -2d -nxb=16 -nyb=16 +amrex +noio -maxblocks=100 -objdir=${STAGE_NAME}'
		dir("${STAGE_NAME}"){
		    sh "make -j EXE=flash-exe"
		    sh "mpiexec -n 4 flash-exe"
                }
	    }}

	    stage('PointMassGravity_2dCyl_AMReX'){ steps{
		sh './setup unitTest/Gravity/PointMass -site=ganon_jenkins -auto -2d +amrex +cylindrical +noio -debug -objdir=${STAGE_NAME}'
		dir("${STAGE_NAME}"){
		    sh "make -j EXE=flash-exe"
                    sh "cp ${env.pathToSimulations}/unitTest/Gravity/PointMass/test_2dcyl.par flash.par"
		    sh "mpiexec -n 2 flash-exe"
                }
	    }}

	    stage('PointMassGravity_2dCyl_Paramesh'){ steps{
		sh './setup unitTest/Gravity/PointMass -site=ganon_jenkins -auto -2d +pm4dev +cylindrical +serialIO -debug -objdir=${STAGE_NAME}'
		dir("${STAGE_NAME}"){
		    sh "make -j EXE=flash-exe"
                    sh "cp ${env.pathToSimulations}/unitTest/Gravity/PointMass/test_2dcyl.par flash.par"
		    sh "mpiexec -n 2 flash-exe"
                }
	    }}

	    stage('PointMassGravity_3d_AMReX'){ steps{
		sh './setup unitTest/Gravity/PointMass -site=ganon_jenkins -auto -3d +amrex +noio -maxblocks=10 -nxb=8 -nyb=8 -nzb=8 -objdir=${STAGE_NAME}'
		dir("${STAGE_NAME}"){
		    sh "make -j EXE=flash-exe"
		    sh "mpiexec -n 3 flash-exe"
                }
	    }}

	    stage('PointMassGravity_3d_Paramesh'){ steps{
		sh './setup unitTest/Gravity/PointMass -site=ganon_jenkins -auto -3d +pm4dev -maxblocks=550 -nxb=8 -nyb=8 -nzb=8 -objdir=${STAGE_NAME}'
		dir("${STAGE_NAME}"){
		    sh "make -j EXE=flash-exe"
		    sh "mpiexec -n 3 flash-exe"
                }
	    }}

	    stage('RisingBubble_AMReX_2d'){ steps{
		sh './setup incompFlow/RisingBubble -site=ganon_jenkins -auto -2d -nxb=16 -nyb=16 +amrex +noio -maxblocks=100 -objdir=${STAGE_NAME}'
		dir("${STAGE_NAME}"){
		    sh "make -j EXE=flash-exe"
		    sh "mpiexec -n 2 flash-exe"
                }
	    }}


        }} //stage('UnitTest'){ parallel {
    } // stages{

    post {
        always {
	    cleanWs(
	        cleanWhenNotBuilt: true,
		deleteDirs: true,
		disableDeferredWipeout: false,
		notFailBuild: true,
		patterns: [[pattern: 'lib', type: 'EXCLUDE']] ) // allow amrex to be cached
	}
    }

} // pipeline{
