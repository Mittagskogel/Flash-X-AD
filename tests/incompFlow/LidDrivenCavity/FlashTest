#!/bin/bash

#-------------------------------------------------------------------------------
#
# FlashTest does not communicate success or failure using the error code.
# However, this is how Jenkins determines success or failure of each command
# executed in a Build step.
#
# This script
# 1) sets up a clean test environment,
# 2) runs all desired tests in a single FlashTest run regardless of the success
#    of previous tests,
# 3) checks the root errors file for errors, and
# 4) communicates success/failure via the error code.
#
# For FlashTest to work properly, users of this script must first configure
# gce with the correct compilers and libraries using the softenv
# configuration environment.
#
#-------------------------------------------------------------------------------

# Check environment variables
# FLASH_BASE        - full path to root of FLASH directory tree
# FLASHTEST_BASE    - defined inside container environment
# FLASHTEST_SITES   - defined inside container environment

export FLASH_BASE="/home/mount/FlashX"
export FLASHTEST_BASE="/home/FlashTest"
export FLASHTEST_SITES="/home/FlashTestSuite/container"
export LOGNAME="container"

[ -z "$FLASH_BASE" ]      && { echo "Need to set FLASH_BASE";      exit 1; }

# Where to write file to (in Jenkins-accessible workspace)
FLASHTEST_OUTPUT=$FLASH_BASE/TestResults

export OMP_NUM_THREADS=1

# Build brand-spanking-new version of sfocu
cd $FLASH_BASE/tools/sfocu
make SITE=container NO_NCDF=True sfocu clean
make SITE=container NO_NCDF=True sfocu

RESULTS_DIR=$FLASHTEST_OUTPUT

# Run all tests in one execution
mkdir -pv $FLASHTEST_OUTPUT

$FLASHTEST_BASE/flashTest.py \
                -z "$FLASH_BASE" \
                -o $FLASHTEST_OUTPUT \
                -c $FLASHTEST_SITES/config_main \
                -i $FLASHTEST_SITES/test.info.xml \
                -v \
                -L \
                -s container \
                UnitTest/LidDrivenCavity/AMReX/2d

EXITSTATUS=$?
