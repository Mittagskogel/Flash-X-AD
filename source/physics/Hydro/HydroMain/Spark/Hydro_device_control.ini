[hy_DIR_end]
definition =
  !$omp

[hy_DIR_TARGET_declare_data]
args = [listitems]
definition =

[hy_DIR_parallel_loop]
args = n
definition = 
  @M hy_DIR_HOST_parallel_loop(n)

[hy_DIR_parallel_loop_simd]
args = n
definition = 
  @M hy_DIR_HOST_parallel_loop_simd(n)

[hy_DIR_inner_parallel_loop]
args = n
definition =
  @M hy_DIR_HOST_inner_parallel_loop(n)

[hy_DIR_inner_parallel_loop_simd]
args = n
definition =
  @M hy_DIR_HOST_inner_parallel_loop_simd(n)

[hy_DIR_shared]
args = [listitems]
definition =
  !$omp shared([listitems])

[hy_DIR_private]
args = [listitems]
definition =
  !$omp private([listitems])

[hy_DIR_firstprivate]
args = [listitems]
definition =
  !$omp firstprivate([listitems])



[hy_permute_loop]
args = i_limits, jk_limits
definition =
  do k=jk_limits(LOW,KAXIS,dir,stage),jk_limits(HIGH,KAXIS,dir,stage)
  do j=jk_limits(LOW,JAXIS,dir,stage),jk_limits(HIGH,JAXIS,dir,stage)
  do i=i_limits(LOW,IAXIS,dir,stage),i_limits(HIGH,IAXIS,dir,stage)

[hy_permute_loop_end]
definition =
  end do   ! j
  end do   ! k

[hy_break_loop]
definition =
  end do   ! i

[hy_inner_loop_ext_i]
args = limits
definition =
  do i=limits(LOW,IAXIS,dir,stage)-1, limits(HIGH,IAXIS,dir,stage)+1

[hy_inner_loop_plus]
args = limits, p1, p2, p3
definition=
  do i = limits(LOW,IAXIS,dir,stage), limits(HIGH,IAXIS,dir,stage)+p1


[hy_DIR_HOST_parallel_loop]
args = n
definition =
  !$omp parallel do collapse(n) if(hy_threadWithinBlock) &
  !$omp default(none) &
  !$omp shared(hy_threadWithinBlock)

[hy_DIR_HOST_parallel_loop_simd]
args = n
definition =
  !$omp parallel do simd collapse(n) if(hy_threadWithinBlock) &
  !$omp default(none) &
  !$omp shared(hy_threadWithinBlock)

[hy_DIR_HOST_parallel_if_threaded]
definition =
  !$omp parallel if(hy_threadWithinBlock .and. NDIM > 1) &
  !$omp default(none)

[hy_DIR_HOST_inner_parallel_loop]
args = n
definition =
  !$omp parallel do collapse(n) &
  !$omp default(none)

[hy_DIR_HOST_inner_parallel_loop_simd]
args = n
definition =
  !$omp parallel do simd collapse(n) &
  !$omp default(none)

[hy_DIR_HOST_end_parallel]
definition =
  !$omp end parallel

[hy_DIR_HOST_end_do]
definition =
  !$omp end do

[hy_DIR_HOST_getFaceFlux_shared]
definition =
  !$omp shared(stage, lim, limgc) &
  !$omp shared(starState, flat3d, flx, fly, flz) &
  !$omp shared(a_flux, a_flat, a_shck, a_rope, a_uPlus, a_uMinus) &
  @M hy_DIR_recon_shared &
  @M hy_DIR_normalize_species_shared &
  @M hy_DIR_riemann_shared &
  @M hy_DIR_avisc_shared

[hy_DIR_HOST_getFaceFlux_private]
definition =
  !$omp private(p_flux, p_flat, p_shck, p_rope, p_uPlus, p_uMinus) &
  @M hy_DIR_recon_private &
  @M hy_DIR_normalize_species_private &
  @M hy_DIR_riemann_private &
  @M hy_DIR_avisc_private

[hy_DIR_HOST_do_collapse]
args = n
definition =
  !$omp do schedule(guided) collapse(n)

[hy_DIR_TARGET]
definition =

[hy_DIR_TARGET_end]
definition =

[hy_DIR_TARGET_teams]
definition =

[hy_DIR_TARGET_teams_end]
definition =

[hy_DIR_TARGET_enter_data]
args = modifier, [listitems]
definition =

[hy_DIR_TARGET_exit_data]
args = modifier, [listitems]
definition =

[hy_DIR_TARGET_update_to]
args = [listitems]
definition =

[hy_DIR_TARGET_update_from]
args = [listitems]
definition =

[hy_DIR_TARGET_map]
args = modifier, [listitems]
definition =

[hy_DIR_TARGET_parallel_loop]
args = n
definition =

[hy_DIR_TARGET_parallel_loop_simd]
args = n
definition =

[hy_DIR_TARGET_inner_parallel_loop]
args = n
definition =

[hy_DIR_TARGET_inner_parallel_loop_simd]
args = n
definition =




[hy_DIR_TARGET_flat3d_shared]
definition =

[hy_DIR_TARGET_setRope_private]
definition =

[hy_DIR_TARGET_setRope_shared]
definition =

[hy_DIR_TARGET_recon_private]
definition =

[hy_DIR_TARGET_recon_shared]
definition =

[hy_DIR_TARGET_normalize_species_private]
definition=

[hy_DIR_TARGET_normalize_species_shared]
definition=

[hy_DIR_TARGET_riemann_private]
definition =

[hy_DIR_TARGET_riemann_shared]
definition =

[hy_DIR_TARGET_avisc_private]
definition =

[hy_DIR_TARGET_avisc_shared]
definition =

[hy_DIR_TARGET_saveFlux_shared]
args = flux
definition =
