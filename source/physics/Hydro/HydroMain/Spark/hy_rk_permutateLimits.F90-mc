!> @copyright Copyright 2023 UChicago Argonne, LLC and contributors
!!
!! @licenseblock
!!   Licensed under the Apache License, Version 2.0 (the "License");
!!   you may not use this file except in compliance with the License.
!!
!!   Unless required by applicable law or agreed to in writing, software
!!   distributed under the License is distributed on an "AS IS" BASIS,
!!   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
!!   See the License for the specific language governing permissions and
!!   limitations under the License.
!! @endlicenseblock
!!
!<
!!NOVARIANTS
subroutine hy_rk_permutateLimits(blkLimits, blkLimitsGC, permLimits, permLimitsGC)

#include "Simulation.h"
#include "constants.h"
#include "Spark.h"

   implicit none

   integer, dimension(LOW:HIGH, MDIM), intent(IN) :: blkLimits, blkLimitsGC
   integer, dimension(LOW:HIGH, MDIM, NDIM, MAXSTAGE), intent(OUT) :: permLimits, permLimitsGC

   integer, dimension(LOW:HIGH, MDIM) :: limits
   integer, dimension(MDIM) :: gCells
   integer :: dir, ng, stage

   do stage = 1, MAXSTAGE
      ng = (MAXSTAGE-stage)*NSTENCIL
      @M hy_setLims(ng)
      do dir = 1, NDIM
         select case (dir)
         case (IAXIS)
            permLimits(:, :, dir, stage) = limits(:, :)
            gCells(1) = (limits(LOW, IAXIS)-blkLimitsGC(LOW, IAXIS))
            gCells(2) = (limits(LOW, JAXIS)-blkLimitsGC(LOW, JAXIS))
            gCells(3) = (limits(LOW, KAXIS)-blkLimitsGC(LOW, KAXIS))
         case (JAXIS)
            permLimits(:, 1, dir, stage) = limits(:, JAXIS)
            permLimits(:, 2, dir, stage) = limits(:, IAXIS)
            permLimits(:, 3, dir, stage) = limits(:, KAXIS)
            gCells(1) = (limits(LOW, JAXIS)-blkLimitsGC(LOW, JAXIS))
            gCells(2) = (limits(LOW, IAXIS)-blkLimitsGC(LOW, IAXIS))
            gCells(3) = (limits(LOW, KAXIS)-blkLimitsGC(LOW, KAXIS))
         case (KAXIS)
            permLimits(:, 1, dir, stage) = limits(:, KAXIS)
            permLimits(:, 2, dir, stage) = limits(:, IAXIS)
            permLimits(:, 3, dir, stage) = limits(:, JAXIS)
            gCells(1) = (limits(LOW, KAXIS)-blkLimitsGC(LOW, KAXIS))
            gCells(2) = (limits(LOW, IAXIS)-blkLimitsGC(LOW, IAXIS))
            gCells(3) = (limits(LOW, JAXIS)-blkLimitsGC(LOW, JAXIS))
         end select
         permLimitsGC(LOW, :, dir, stage) = permLimits(LOW, :, dir, stage)-gCells(:)
         permLimitsGC(HIGH, :, dir, stage) = permLimits(HIGH, :, dir, stage)+gCells(:)
      end do
   end do

end subroutine hy_rk_permutateLimits
