[Hydro_interface_implementation_specific]
definition =
  !!Reorder(4): Uin,hy_starState,hy_tmpState
  !!Reorder(4): hy_fl[xyz],hy_fluxBuf[XYZ]
  !!Reorder(4): hy_rope,hy_flux,hy_uPlus,hy_uMinus
  #define MILHOJA_BLOCK_GC GRID_IHI_GC, GRID_JHI_GC, GRID_KHI_GC
  #define MILHOJA_BLOCK GRID_IHI, GRID_JHI, GRID_KHI
  #define MILHOJA_SCRATCH_GC(_VARS) source=scratch, extents=[MILHOJA_BLOCK_GC, _VARS], lbound=[tile_lbound, 1]
  #define MILHOJA_FLUXBUF_X source=grid_data, structure_index=[fluxx, 1], RW=[1:NFLUXES]
  #define MILHOJA_FAREA_X source=scratch, extents=[GRID_IHI_GC, GRID_JHI_GC, GRID_KHI_GC], lbound=[tile_lbound]
  #if NDIM > 1
  #   define MILHOJA_FLUXBUF_Y source=grid_data, structure_index=[fluxy, 1], RW=[1:NFLUXES]
  #   define MILHOJA_FAREA_Y source=scratch, extents=[GRID_IHI_GC, GRID_JHI_GC, GRID_KHI_GC], lbound=[tile_lbound]
  #else
  #   define MILHOJA_FLUXBUF_Y source=scratch, extents=[1, 1, 1, 1], lbound=[tile_lo, 1]
  #   define MILHOJA_FAREA_Y source=scratch, extents=[1, 1, 1], lbound=[tile_lbound]
  #endif
  #if NDIM > 2
  #   define MILHOJA_FLUXBUF_Z source=grid_data, structure_index=[fluxz, 1], RW=[1:NFLUXES]
  #   define MILHOJA_FAREA_Z source=scratch, extents=[GRID_IHI_GC, GRID_JHI_GC, GRID_KHI_GC], lbound=[tile_lbound]
  #else
  #   define MILHOJA_FLUXBUF_Z source=scratch, extents=[1, 1, 1, 1], lbound=[tile_lo, 1]
  #   define MILHOJA_FAREA_Z source=scratch, extents=[1, 1, 1], lbound=[tile_lbound]
  #endif
  #include "Spark.h"
  #include "Eos.h"

  !!milhoja begin common
  !!   _Uin :: source=grid_data, &
  !!           structure_index=[center, 1], &
  !!           RW=[1:NUNK_VARS]
  !!   _fluxBufX :: MILHOJA_FLUXBUF_X
  !!   _fluxBufY :: MILHOJA_FLUXBUF_Y
  !!   _fluxBufZ :: MILHOJA_FLUXBUF_Z
  !!   _hy_Vc :: source=scratch, &
  !!             extents=[MILHOJA_BLOCK_GC], &
  !!             lbound=[tile_lbound]
  !!   _hy_flx :: MILHOJA_SCRATCH_GC(NFLUXES)
  !!   _hy_fly :: MILHOJA_SCRATCH_GC(NFLUXES)
  !!   _hy_flz :: MILHOJA_SCRATCH_GC(NFLUXES)
  !!   _blkLimits :: source=tile_interior
  !!   _blkLimitsGC :: source=tile_arrayBounds
  !!   _lo :: source=tile_lo
  !!   _loGC :: source=tile_lbound
  !!   _hy_starState :: source=scratch, &
  !!                    extents=[MILHOJA_BLOCK_GC, NUNK_VARS], &
  !!                    lbound=[tile_lbound, 1]
  !!   _hy_tmpState :: source=scratch, &
  !!                   extents=[MILHOJA_BLOCK_GC, NUNK_VARS], &
  !!                   lbound=[tile_lbound, 1]
  !!   _hy_grav :: source=scratch, &
  !!               extents=[3, MILHOJA_BLOCK_GC], &
  !!               lbound=[1, tile_lbound]
  !!   _hy_flat3d :: source=scratch, &
  !!                 extents=[MILHOJA_BLOCK_GC], &
  !!                 lbound=[tile_lbound]
  !!   _hy_rope :: MILHOJA_SCRATCH_GC(NRECON)
  !!   _hy_flux :: MILHOJA_SCRATCH_GC(NRECON)
  !!   _hy_uPlus :: MILHOJA_SCRATCH_GC(NRECON)
  !!   _hy_uMinus :: MILHOJA_SCRATCH_GC(NRECON)
  !!   _stage :: source=external, &
  !!             origin=local:stage
  !!   _dt :: source=external, &
  !!          origin=input_arg:dt
  !!   _dtOld :: source=external, &
  !!             origin=input_arg:dtOld
  !!   _xCenter :: source=scratch, &
  !!               extents=[GRID_IHI_GC], &
  !!               lbound=[1]
  !!   _yCenter :: source=scratch, &
  !!               extents=[GRID_JHI_GC], &
  !!               lbound=[1]
  !!   _zCenter :: source=scratch, &
  !!               extents=[GRID_KHI_GC], &
  !!               lbound=[1]
  !!   _xLeft :: source=scratch, &
  !!             extents=[GRID_IHI_GC], &
  !!             lbound=[1]
  !!   _xRight :: source=scratch, &
  !!              extents=[GRID_IHI_GC], &
  !!              lbound=[1]
  !!   _yLeft :: source=scratch, &
  !!             extents=[GRID_JHI_GC], &
  !!             lbound=[1]
  !!   _yRight :: source=scratch, &
  !!              extents=[GRID_JHI_GC], &
  !!              lbound=[1]
  !!   _fareaX :: MILHOJA_FAREA_X
  !!   _fareaY :: MILHOJA_FAREA_Y
  !!   _fareaZ :: MILHOJA_FAREA_Z
  !!   _cvol :: source=scratch, &
  !!            extents=[MILHOJA_BLOCK_GC], &
  !!            lbound=[tile_lbound]
  !!milhoja end common

  interface
     !!milhoja begin
     !!  Uin :: common=_Uin
     !!  blkLimits :: common=_blkLimits
     !!  blkLimitsGC :: common=_blkLimitsGC
     !!  deltas :: source=tile_deltas
     !!  hy_Vc :: common=_hy_Vc
     !!  hy_starState :: common=_hy_starState
     !!  hy_tmpState :: common=_hy_tmpState
     !!  hy_xCenter :: common=_xCenter
     !!  hy_yCenter :: common=_yCenter
     !!  hy_zCenter :: common=_zCenter
     !!  hy_xLeft :: common=_xLeft
     !!  hy_xRight :: common=_xRight
     !!  hy_yLeft :: common=_yLeft
     !!  hy_yRight :: common=_yRight
     !!  hy_fareaX :: common=_fareaX
     !!  hy_fareaY :: common=_fareaY
     !!  hy_fareaZ :: common=_fareaZ
     !!  hy_cvol :: common=_cvol
     !!  stage :: common=_stage
     !!  lo :: common=_lo
     !!  loGC :: common=_loGC
     subroutine Hydro_prepBlock(Uin, blkLimits, blkLimitsGC, deltas, &
                                hy_Vc, hy_starState, hy_tmpState, &
                                hy_xCenter, hy_yCenter, hy_zCenter, &
                                hy_xLeft, hy_xRight, hy_yLeft, hy_yRight, &
                                hy_fareaX, hy_fareaY, hy_fareaZ, hy_cvol, &
                                stage, lo, loGC)
        implicit none
        integer, intent(IN) :: stage, lo(3), loGC(3)
        real, dimension(MDIM), intent(IN) :: deltas
        integer, dimension(LOW:HIGH, MDIM), intent(IN) :: blkLimits, blkLimitsGC
        real, dimension(loGC(1):), intent(IN OUT) :: hy_xCenter
        real, dimension(loGC(2):), intent(IN OUT) :: hy_yCenter
        real, dimension(loGC(3):), intent(IN OUT) :: hy_zCenter
        real, dimension(loGC(1):), intent(IN OUT) :: hy_xLeft, hy_xRight
        real, dimension(loGC(2):), intent(IN OUT) :: hy_yLeft, hy_yRight
        real, dimension(loGC(1):, loGC(2):, loGC(3):), intent(IN OUT) :: hy_fareaX, hy_fareaY, hy_fareaZ, hy_cvol
        real, dimension(1:, loGC(1):, loGC(2):, loGC(3):), intent(IN OUT) :: Uin
        real, dimension(1:, loGC(1):, loGC(2):, loGC(3):), intent(IN OUT) :: hy_starState, hy_tmpState
        real, dimension(loGC(1):, loGC(2):, loGC(3):), intent(IN OUT) :: hy_Vc
     end subroutine Hydro_prepBlock
    !!milhoja end
  end interface

  interface
     !!milhoja begin
     !!   stage_in :: common=_stage
     !!   Uin :: common=_Uin
     !!   dt :: common=_dt
     !!   dtOld :: common=_dtOld
     !!   hy_starState :: common=_hy_starState
     !!   hy_tmpState :: common=_hy_tmpState
     !!   hy_flx :: common=_hy_flx
     !!   hy_fly :: common=_hy_fly
     !!   hy_flz :: common=_hy_flz
     !!   hy_fluxBufX :: common=_fluxBufX
     !!   hy_fluxBufY :: common=_fluxBufY
     !!   hy_fluxBufZ :: common=_fluxBufZ
     !!   hy_grav :: common=_hy_grav
     !!   hy_flat3d :: common=_hy_flat3d
     !!   hy_rope :: common=_hy_rope
     !!   hy_flux :: common=_hy_flux
     !!   hy_uPlus :: common=_hy_uPlus
     !!   hy_uMinus :: common=_hy_uMinus
     !!   deltas :: source=tile_deltas
     !!   blkLimits :: common=_blkLimits
     !!   blkLimitsGC :: common=_blkLimitsGC
     !!   lo :: common=_lo
     !!   loGC :: common=_loGC
     !!   hy_xCenter :: common=_xCenter
     !!   hy_yCenter :: common=_yCenter
     !!   hy_zCenter :: common=_zCenter
     !!   hy_xLeft :: common=_xLeft
     !!   hy_xRight :: common=_xRight
     !!   hy_yLeft :: common=_yLeft
     !!   hy_yRight :: common=_yRight
     !!   hy_fareaX :: common=_fareaX
     !!   hy_fareaY :: common=_fareaY
     !!   hy_fareaZ :: common=_fareaZ
     !!   hy_cvol :: common=_cvol
     subroutine Hydro_advance(stage_in, Uin, dt, dtOld, &
                              hy_starState, hy_tmpState, &
                              hy_flx, hy_fly, hy_flz, &
                              hy_fluxBufX, hy_fluxBufY, hy_fluxBufZ, &
                              hy_grav, hy_flat3d, &
                              hy_rope, hy_flux, hy_uPlus, hy_uMinus, &
                              deltas, &
                              blkLimits, blkLimitsGC, &
                              lo, loGC, &
                              hy_xCenter, hy_yCenter, hy_zCenter, &
                              hy_xLeft, hy_xRight, hy_yLeft, hy_yRight, &
                              hy_fareaX, hy_fareaY, hy_fareaZ, hy_cvol)
        implicit none
        integer, intent(IN) :: stage_in, lo(3), loGC(3)
        real, dimension(1:, loGC(1):, loGC(2):, loGC(3):), intent(IN OUT) :: Uin
        real, intent(IN) :: dt, dtold
        real, dimension(1:, loGC(1):, loGC(2):, loGC(3):), intent(IN OUT) :: hy_starState
        real, dimension(1:, loGC(1):, loGC(2):, loGC(3):), intent(OUT) :: hy_flx, hy_fly, hy_flz
        real, dimension(1:, loGC(1):, loGC(2):, loGC(3):), intent(IN) :: hy_tmpState
        real, dimension(1:, lo(1):, lo(2):, lo(3):), intent(OUT) :: hy_fluxBufX, hy_fluxBufY, hy_fluxBufZ
        real, dimension(1:, loGC(1):, loGC(2):, loGC(3):), intent(OUT) :: hy_rope, hy_flux, hy_uPlus, hy_uMinus
        real, dimension(1:, loGC(1):, loGC(2):, loGC(3):), intent(OUT) :: hy_grav
        real, dimension(loGC(1):, loGC(2):, loGC(3):), intent(OUT) :: hy_flat3d

        integer, dimension(LOW:HIGH, MDIM), intent(IN) :: blkLimits, blkLimitsGC

        real, dimension(MDIM), intent(IN)  :: deltas
        real, dimension(loGC(1):), intent(IN) :: hy_xCenter
        real, dimension(loGC(2):), intent(IN) :: hy_yCenter
        real, dimension(loGC(3):), intent(IN) :: hy_zCenter
        real, dimension(loGC(1):), intent(IN) :: hy_xLeft, hy_xRight
        real, dimension(loGC(2):), intent(IN) :: hy_yLeft, hy_yRight
        real, dimension(loGC(1):, loGC(2):, loGC(3):), intent(IN) :: hy_fareaX, hy_fareaY, hy_fareaZ, hy_cvol
     end subroutine Hydro_advance
     !!milhoja end
  end interface

  !! GPU versions

  interface
     !!milhoja begin
     !!  Uin :: common=_Uin
     !!  blkLimits :: common=_blkLimits
     !!  blkLimitsGC :: common=_blkLimitsGC
     !!  deltas :: source=tile_deltas
     !!  hy_Vc :: common=_hy_Vc
     !!  hy_starState :: common=_hy_starState
     !!  hy_tmpState :: common=_hy_tmpState
     !!  hy_xCenter :: common=_xCenter
     !!  hy_yCenter :: common=_yCenter
     !!  hy_zCenter :: common=_zCenter
     !!  hy_xLeft :: common=_xLeft
     !!  hy_xRight :: common=_xRight
     !!  hy_yLeft :: common=_yLeft
     !!  hy_yRight :: common=_yRight
     !!  hy_fareaX :: common=_fareaX
     !!  hy_fareaY :: common=_fareaY
     !!  hy_fareaZ :: common=_fareaZ
     !!  hy_cvol :: common=_cvol
     !!  stage :: common=_stage
     !!  lo :: common=_lo
     !!  loGC :: common=_loGC
     subroutine Hydro_prepBlock_GPU(Uin, blkLimits, blkLimitsGC, deltas, &
                                    hy_Vc, hy_starState, hy_tmpState, &
                                    hy_xCenter, hy_yCenter, hy_zCenter, &
                                    hy_xLeft, hy_xRight, hy_yLeft, hy_yRight, &
                                    hy_fareaX, hy_fareaY, hy_fareaZ, hy_cvol, &
                                    stage, lo, loGC)
        implicit none
        integer, intent(IN) :: stage, lo(3), loGC(3)
        integer, dimension(LOW:HIGH, MDIM), intent(IN) :: blkLimits, blkLimitsGC
        real, dimension(MDIM), intent(IN) :: deltas
        real, dimension(loGC(1):), intent(IN OUT) :: hy_xCenter
        real, dimension(loGC(2):), intent(IN OUT) :: hy_yCenter
        real, dimension(loGC(3):), intent(IN OUT) :: hy_zCenter
        real, dimension(loGC(1):), intent(IN OUT) :: hy_xLeft, hy_xRight
        real, dimension(loGC(2):), intent(IN OUT) :: hy_yLeft, hy_yRight
        real, dimension(loGC(1):, loGC(2):, loGC(3):), intent(IN OUT) :: hy_fareaX, hy_fareaY, hy_fareaZ, hy_cvol
        real, dimension(1:, loGC(1):, loGC(2):, loGC(3):), intent(IN OUT) :: Uin
        real, dimension(1:, loGC(1):, loGC(2):, loGC(3):), intent(IN OUT) :: hy_starState, hy_tmpState
        real, dimension(loGC(1):, loGC(2):, loGC(3):), intent(IN OUT) :: hy_Vc
     end subroutine Hydro_prepBlock_GPU
    !!milhoja end
  end interface

  interface
     !!milhoja begin
     !!   stage_in :: common=_stage
     !!   Uin :: common=_Uin
     !!   dt :: common=_dt
     !!   dtOld :: common=_dtOld
     !!   hy_starState :: common=_hy_starState
     !!   hy_tmpState :: common=_hy_tmpState
     !!   hy_flx :: common=_hy_flx
     !!   hy_fly :: common=_hy_fly
     !!   hy_flz :: common=_hy_flz
     !!   hy_fluxBufX :: common=_fluxBufX
     !!   hy_fluxBufY :: common=_fluxBufY
     !!   hy_fluxBufZ :: common=_fluxBufZ
     !!   hy_grav :: common=_hy_grav
     !!   hy_flat3d :: common=_hy_flat3d
     !!   hy_rope :: common=_hy_rope
     !!   hy_flux :: common=_hy_flux
     !!   hy_uPlus :: common=_hy_uPlus
     !!   hy_uMinus :: common=_hy_uMinus
     !!   deltas :: source=tile_deltas
     !!   blkLimits :: common=_blkLimits
     !!   blkLimitsGC :: common=_blkLimitsGC
     !!   lo :: common=_lo
     !!   loGC :: common=_loGC
     !!   hy_xCenter :: common=_xCenter
     !!   hy_yCenter :: common=_yCenter
     !!   hy_zCenter :: common=_zCenter
     !!   hy_xLeft :: common=_xLeft
     !!   hy_xRight :: common=_xRight
     !!   hy_yLeft :: common=_yLeft
     !!   hy_yRight :: common=_yRight
     !!   hy_fareaX :: common=_fareaX
     !!   hy_fareaY :: common=_fareaY
     !!   hy_fareaZ :: common=_fareaZ
     !!   hy_cvol :: common=_cvol
     !!   hy_eosData :: source=scratch, &
     !!                 extents=[GRID_IHI_GC*GRID_JHI_GC*GRID_KHI_GC, EOS_VARS], &
     !!                 lbound=[1, 1]
     !!   hy_eosMfrac :: source=scratch, &
     !!                  extents=[NSPECIES, GRID_IHI_GC*GRID_JHI_GC*GRID_KHI_GC], &
     !!                  lbound=[1, 1]
     subroutine Hydro_advance_GPU(stage_in, Uin, dt, dtOld, &
                                  hy_starState, hy_tmpState, &
                                  hy_flx, hy_fly, hy_flz, &
                                  hy_fluxBufX, hy_fluxBufY, hy_fluxBufZ, &
                                  hy_grav, hy_flat3d, &
                                  hy_rope, hy_flux, hy_uPlus, hy_uMinus, &
                                  deltas, &
                                  blkLimits, blkLimitsGC, &
                                  lo, loGC, &
                                  hy_xCenter, hy_yCenter, hy_zCenter, &
                                  hy_xLeft, hy_xRight, hy_yLeft, hy_yRight, &
                                  hy_fareaX, hy_fareaY, hy_fareaZ, hy_cvol &
                                  , hy_eosData, hy_eosMfrac)
        implicit none
        integer, intent(IN) :: stage_in, lo(3), loGC(3)
        real, dimension(1:, loGC(1):, loGC(2):, loGC(3):), intent(IN OUT) :: Uin
        real, intent(IN) :: dt, dtold
        real, dimension(1:, loGC(1):, loGC(2):, loGC(3):), intent(IN OUT) :: hy_starState
        real, dimension(1:, loGC(1):, loGC(2):, loGC(3):), intent(OUT) :: hy_flx, hy_fly, hy_flz
        real, dimension(1:, loGC(1):, loGC(2):, loGC(3):), intent(IN) :: hy_tmpState
        real, dimension(1:, lo(1):, lo(2):, lo(3):), intent(OUT) :: hy_fluxBufX, hy_fluxBufY, hy_fluxBufZ
        real, dimension(1:, loGC(1):, loGC(2):, loGC(3):), intent(OUT) :: hy_rope, hy_flux, hy_uPlus, hy_uMinus
        real, dimension(1:, loGC(1):, loGC(2):, loGC(3):), intent(OUT) :: hy_grav
        real, dimension(loGC(1):, loGC(2):, loGC(3):), intent(OUT) :: hy_flat3d

        integer, dimension(LOW:HIGH, MDIM), intent(IN) :: blkLimits, blkLimitsGC

        real, dimension(MDIM), intent(IN)  :: deltas
        real, dimension(loGC(1):), intent(IN) :: hy_xCenter
        real, dimension(loGC(2):), intent(IN) :: hy_yCenter
        real, dimension(loGC(3):), intent(IN) :: hy_zCenter
        real, dimension(loGC(1):), intent(IN) :: hy_xLeft, hy_xRight
        real, dimension(loGC(2):), intent(IN) :: hy_yLeft, hy_yRight
        real, dimension(loGC(1):, loGC(2):, loGC(3):), intent(IN) :: hy_fareaX, hy_fareaY, hy_fareaZ, hy_cvol
        real, dimension(1:, 1:) :: hy_eosData, hy_eosMfrac

     end subroutine Hydro_advance_GPU
     !!milhoja end
  end interface


