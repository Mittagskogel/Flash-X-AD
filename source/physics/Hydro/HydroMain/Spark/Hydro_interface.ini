[Hydro_interface_implementation_specific]
definition =
  !!Reorder(4): Uin,hy_starState,hy_tmpState
  !!Reorder(4): hy_fl[xyz],hy_fluxBuf[XYZ]
  !!Reorder(4): hy_rope,hy_flux,hy_uPlus,hy_uMinus
  #define MILHOJA_BLOCK_GC GRID_IHI_GC, GRID_JHI_GC, GRID_KHI_GC
  #define MILHOJA_BLOCK GRID_IHI, GRID_JHI, GRID_KHI
  #define MILHOJA_SCRATCH_GC(_VARS) source=scratch, extents=[MILHOJA_BLOCK_GC, _VARS], lbound=[tile_lbound, 1]
  #define MILHOJA_FLUXBUF_X source=grid_data, structure_index=[fluxx, 1], RW=[1:NFLUXES]
  #if NDIM > 1
  #   define MILHOJA_FLUXBUF_Y source=grid_data, structure_index=[fluxy, 1], RW=[1:NFLUXES]
  #else
  #   define MILHOJA_FLUXBUF_Y source=scratch, extents=[1, 1, 1, 1], lbound=[tile_lo, 1]
  #endif
  #if NDIM > 2
  #   define MILHOJA_FLUXBUF_Z source=grid_data, structure_index=[fluxz, 1], RW=[1:NFLUXES]
  #else
  #   define MILHOJA_FLUXBUF_Z source=scratch, extents=[1, 1, 1, 1], lbound=[tile_lo, 1]
  #endif
  #include "Spark.h"

  !!milhoja begin common
  !!   _Uin :: source=grid_data, &
  !!           structure_index=[center, 1], &
  !!           RW=[1:NUNK_VARS]
  !!   _fluxBufX :: MILHOJA_FLUXBUF_X
  !!   _fluxBufY :: MILHOJA_FLUXBUF_Y
  !!   _fluxBufZ :: MILHOJA_FLUXBUF_Z
  !!   _blkLimits :: source=tile_interior
  !!   _blkLimitsGC :: source=tile_arrayBounds
  !!   _lo :: source=tile_lo
  !!   _loGC :: source=tile_lbound
  !!   _hy_starState :: source=scratch, &
  !!                    extents=[MILHOJA_BLOCK_GC, NUNK_VARS], &
  !!                    lbound=[tile_lbound, 1]
  !!   _hy_tmpState :: source=scratch, &
  !!                   extents=[MILHOJA_BLOCK_GC, NUNK_VARS], &
  !!                   lbound=[tile_lbound, 1]
  !!   _stage :: source=external, &
  !!             origin=local:stage
  !!   _dt :: source=external, &
  !!          origin=input_arg:dt
  !!   _dtOld :: source=external, &
  !!             origin=input_arg:dtOld
  !!   _xCenter_fake :: source=scratch, &
  !!                    extents=[1], &
  !!                    lbound=[1]
  !!   _yCenter_fake :: source=scratch, &
  !!                    extents=[1], &
  !!                    lbound=[1]
  !!   _zCenter_fake :: source=scratch, &
  !!                    extents=[1], &
  !!                    lbound=[1]
  !!   _xLeft_fake :: source=scratch, &
  !!                  extents=[1], &
  !!                  lbound=[1]
  !!   _xRight_fake :: source=scratch, &
  !!                   extents=[1], &
  !!                   lbound=[1]
  !!   _yLeft_fake :: source=scratch, &
  !!                  extents=[1], &
  !!                  lbound=[1]
  !!   _yRight_fake :: source=scratch, &
  !!                   extents=[1], &
  !!                   lbound=[1]
  !!   _fareaX_fake :: source=scratch, &
  !!                   extents=[1, 1, 1], &
  !!                   lbound=[1, 1, 1]
  !!   _fareaY_fake :: source=scratch, &
  !!                   extents=[1, 1, 1], &
  !!                   lbound=[1, 1, 1]
  !!   _fareaZ_fake :: source=scratch, &
  !!                   extents=[1, 1, 1], &
  !!                   lbound=[1, 1, 1]
  !!   _cvol_fake :: source=scratch, &
  !!                 extents=[1, 1, 1], &
  !!                 lbound=[1, 1, 1]
  !!milhoja end common

  interface
     !!milhoja begin
     !!  Uin :: common=_Uin
     !!  hy_Vc :: source=scratch, &
     !!           extents=[MILHOJA_BLOCK_GC], &
     !!           lbound=[tile_lbound]
     !!  blkLimits :: common=_blkLimits
     !!  blkLimitsGC :: common=_blkLimitsGC
     !!  hy_starState :: common=_hy_starState
     !!  hy_tmpState :: common=_hy_tmpState
     !!  stage :: common=_stage
     !!  lo :: common=_lo
     !!  loGC :: common=_loGC
     subroutine Hydro_prepBlock(Uin, hy_Vc, blkLimits, blkLimitsGC, hy_starState, hy_tmpState, &
                                stage, lo, loGC)
        implicit none
        integer, intent(IN) :: lo(3), loGC(3)
        real, dimension(1:, loGC(1):, loGC(2):, loGC(3):), intent(IN OUT) :: Uin
        real, dimension(1:, loGC(1):, loGC(2):, loGC(3):), intent(OUT) :: hy_starState, hy_tmpState
        real, dimension(loGC(1):, loGC(2):, loGC(3):), intent(OUT) :: hy_Vc
        integer, dimension(LOW:HIGH, MDIM), intent(IN) :: blkLimits, blkLimitsGC
        integer, intent(IN) :: stage
     end subroutine Hydro_prepBlock
    !!milhoja end
  end interface

  interface
     !!milhoja begin
     !!   stage_in :: common=_stage
     !!   Uin :: common=_Uin
     !!   dt :: common=_dt
     !!   dtOld :: common=_dtOld
     !!   hy_starState :: common=_hy_starState
     !!   hy_tmpState :: common=_hy_tmpState
     !!   hy_flx :: MILHOJA_SCRATCH_GC(NFLUXES)
     !!   hy_fly :: MILHOJA_SCRATCH_GC(NFLUXES)
     !!   hy_flz :: MILHOJA_SCRATCH_GC(NFLUXES)
     !!   hy_fluxBufX :: common=_fluxBufX
     !!   hy_fluxBufY :: common=_fluxBufY
     !!   hy_fluxBufZ :: common=_fluxBufZ
     !!   hy_grav :: source=scratch, &
     !!              extents=[3, MILHOJA_BLOCK_GC], &
     !!              lbound=[1, tile_lbound]
     !!   hy_flat3d :: source=scratch, &
     !!                extents=[MILHOJA_BLOCK_GC], &
     !!                lbound=[tile_lbound]
     !!   hy_rope :: MILHOJA_SCRATCH_GC(NRECON)
     !!   hy_flux :: MILHOJA_SCRATCH_GC(NRECON)
     !!   hy_uPlus :: MILHOJA_SCRATCH_GC(NRECON)
     !!   hy_uMinus :: MILHOJA_SCRATCH_GC(NRECON)
     !!   deltas :: source=tile_deltas
     !!   blkLimits :: common=_blkLimits
     !!   blkLimitsGC :: common=_blkLimitsGC
     !!   lo :: common=_lo
     !!   loGC :: common=_loGC
     !!   hy_xCenter :: common=_xCenter_fake
     !!   hy_yCenter :: common=_yCenter_fake
     !!   hy_zCenter :: common=_zCenter_fake
     !!   hy_xLeft :: common=_xLeft_fake
     !!   hy_xRight :: common=_xRight_fake
     !!   hy_yLeft :: common=_yLeft_fake
     !!   hy_yRight :: common=_yRight_fake
     !!   hy_fareaX :: common=_fareaX_fake
     !!   hy_fareaY :: common=_fareaY_fake
     !!   hy_fareaZ :: common=_fareaZ_fake
     !!   hy_cvol :: common=_cvol_fake
     @M hy_eos_milhoja_block
     subroutine Hydro_advance(stage_in, Uin, dt, dtOld, &
                              hy_starState, hy_tmpState, &
                              hy_flx, hy_fly, hy_flz, &
                              hy_fluxBufX, hy_fluxBufY, hy_fluxBufZ, &
                              hy_grav, hy_flat3d, &
                              hy_rope, hy_flux, hy_uPlus, hy_uMinus, &
                              deltas, &
                              blkLimits, blkLimitsGC, &
                              lo, loGC, &
                              hy_xCenter, hy_yCenter, hy_zCenter, &
                              hy_xLeft, hy_xRight, hy_yLeft, hy_yRight, &
                              hy_fareaX, hy_fareaY, hy_fareaZ, hy_cvol &
                              @M hy_eos_args)
        implicit none
        integer, intent(IN) :: stage_in, lo(3), loGC(3)
        real, dimension(1:, loGC(1):, loGC(2):, loGC(3):), intent(IN OUT) :: Uin
        real, intent(IN) :: dt, dtold
        real, dimension(1:, loGC(1):, loGC(2):, loGC(3):), intent(IN OUT) :: hy_starState
        real, dimension(1:, loGC(1):, loGC(2):, loGC(3):), intent(OUT) :: hy_flx, hy_fly, hy_flz
        real, dimension(1:, loGC(1):, loGC(2):, loGC(3):), intent(IN) :: hy_tmpState
        real, dimension(1:, lo(1):, lo(2):, lo(3):), intent(OUT) :: hy_fluxBufX, hy_fluxBufY, hy_fluxBufZ
        real, dimension(1:, loGC(1):, loGC(2):, loGC(3):), intent(OUT) :: hy_rope, hy_flux, hy_uPlus, hy_uMinus
        real, dimension(1:, loGC(1):, loGC(2):, loGC(3):), intent(OUT) :: hy_grav
        real, dimension(loGC(1):, loGC(2):, loGC(3):), intent(OUT) :: hy_flat3d

        integer, dimension(LOW:HIGH, MDIM), intent(IN) :: blkLimits, blkLimitsGC

        real, dimension(MDIM), intent(IN)  :: deltas
        real, dimension(loGC(1):), intent(IN) :: hy_xCenter
        real, dimension(loGC(2):), intent(IN) :: hy_yCenter
        real, dimension(loGC(3):), intent(IN) :: hy_zCenter
        real, dimension(loGC(1):), intent(IN) :: hy_xLeft, hy_xRight
        real, dimension(loGC(2):), intent(IN) :: hy_yLeft, hy_yRight
        real, dimension(loGC(1):, loGC(2):, loGC(3):), intent(IN) :: hy_fareaX, hy_fareaY, hy_fareaZ, hy_cvol
        @M hy_eos_declare_scr

     end subroutine Hydro_advance
     !!milhoja end
  end interface



