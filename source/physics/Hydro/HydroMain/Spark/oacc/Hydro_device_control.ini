[hy_DIR_end]
definition =
  !$acc

[hy_DIR_TARGET_declare_data]
args = [listitems]
definition =
  !$acc declare copyin([listitems])

[hy_DIR_parallel_loop]
args = n
definition = 
  @M hy_DIR_TARGET_parallel_loop(n)

[hy_DIR_parallel_loop_simd]
args = n
definition = 
  @M hy_DIR_TARGET_parallel_loop_simd(n)

[hy_DIR_inner_parallel_loop]
args = n
definition =
  @M hy_DIR_TARGET_inner_parallel_loop(n)

[hy_DIR_inner_parallel_loop_simd]
args = n
definition =
  @M hy_DIR_TARGET_inner_parallel_loop_simd(n)

[hy_DIR_shared]
args = [listitems]
definition =

[hy_DIR_private]
args = [listitems]
definition =
  !$acc private([listitems])

[hy_DIR_firstprivate]
args = [listitems]
definition =

[hy_permute_loop_end]
definition =

[hy_break_loop]
definition =
  end do   ! i
  end do   ! j
  end do   ! k

[hy_inner_loop_ext_i]
args = limits
definition =
  do k=limits(LOW,KAXIS,dir,stage),limits(HIGH,KAXIS,dir,stage)
  do j=limits(LOW,JAXIS,dir,stage),limits(HIGH,JAXIS,dir,stage)
  do i=limits(LOW,IAXIS,dir,stage)-1,limits(HIGH,IAXIS,dir,stage)+1

[hy_inner_loop_plus]
args = limits, p1, p2, p3
definition=
  do k=limits(LOW,KAXIS,dir,stage),limits(HIGH,KAXIS,dir,stage)+K3D*p3
  do j=limits(LOW,JAXIS,dir,stage),limits(HIGH,JAXIS,dir,stage)+K2D*p2
  do i=limits(LOW,IAXIS,dir,stage),limits(HIGH,IAXIS,dir,stage)+p1

[hy_DIR_HOST_parallel_loop]
args = n
definition =

[hy_DIR_HOST_parallel_loop_simd]
args = n
definition =

[hy_DIR_HOST_parallel_if_threaded]
definition =

[hy_DIR_HOST_end_parallel]
definition =

[hy_DIR_HOST_end_do]
definition =

[hy_DIR_HOST_getFaceFlux_shared]
definition =

[hy_DIR_HOST_getFaceFlux_private]
definition =

[hy_DIR_HOST_do_collapse]
args = n
definition =


[hy_DIR_TARGET]
definition =
  !$acc parallel

[hy_DIR_TARGET_end]
definition =
  !$acc end parallel

[hy_DIR_TARGET_teams]
definition =
  !$acc parallel

[hy_DIR_TARGET_teams_end]
definition =
  !$acc end parallel

#!! hack to use omp_offload modifers in oacc data clauses
[to]
definition =
  !$acc pcopyin

[alloc]
definition =
  !$acc create

[release]
definition = 
  !$acc delete
#!!

[hy_DIR_TARGET_enter_data]
args = modifier, [listitems]
definition =
  !$acc enter data &
  @M modifier()([listitems])

[hy_DIR_TARGET_exit_data]
args = modifier, [listitems]
definition =
  !$acc exit data &
  @M modifier()([listitems])

[hy_DIR_TARGET_update_to]
args = [listitems]
definition =
  !$acc update device([listitems])

[hy_DIR_TARGET_update_from]
args = [listitems]
definition =
  !$acc update host([listitems])

[hy_DIR_TARGET_map]
args = modifier, [listitems]
definition =

[hy_DIR_TARGET_parallel_loop]
args = n
definition =
  !$acc parallel loop gang vector collapse(n)

[hy_DIR_TARGET_parallel_loop_simd]
args = n
definition =
  !$acc parallel loop gang vector collapse(n)

[hy_DIR_TARGET_inner_parallel_loop]
args = n
definition =
  !$acc loop gang vector collapse(n)

[hy_DIR_TARGET_inner_parallel_loop_simd]
args = n
definition =
  !$acc loop gang vector collapse(n)

[hy_DIR_TARGET_routine_vector]
args = function
definition =

[hy_DIR_TARGET_routine]
args = parallelism
definition =




[hy_DIR_TARGET_flat3d_shared]
definition =
  @M hy_DIR_flat3d_shared

[hy_DIR_TARGET_setRope_private]
definition =
  @M hy_DIR_setRope_private

[hy_DIR_TARGET_setRope_shared]
definition =
  @M hy_DIR_setRope_shared

[hy_DIR_TARGET_recon_private]
definition =
  @M hy_DIR_recon_private

[hy_DIR_TARGET_recon_shared]
definition =
  !$acc shared(lim, dir, stage, p_rope, p_uMinus, p_uPlus, p_flat) &
  @M hy_DIR_recon_shared

[hy_DIR_TARGET_normalize_species_private]
definition=
  @M hy_DIR_normalize_species_private

[hy_DIR_TARGET_normalize_species_shared]
definition=
  !$acc shared(lim, dir, stage, p_uPlus, p_uMinus) &
  @M hy_DIR_normalize_species_shared

[hy_DIR_TARGET_riemann_private]
definition =
  @M hy_DIR_riemann_private

[hy_DIR_TARGET_riemann_shared]
definition =
  !$acc shared(lim, dir, stage, p_uMinus, p_uPlus, p_flux, p_shck) &
  @M hy_DIR_riemann_shared

[hy_DIR_TARGET_avisc_private]
definition =
  @M hy_DIR_avisc_private

[hy_DIR_TARGET_avisc_shared]
definition =
  !$acc shared(lim, dir, stage, p_rope, p_flux, p_uMinus, p_uPlus) &
  @M hy_DIR_avisc_shared

[hy_DIR_TARGET_saveFlux_shared]
args = flux
definition =
  @M hy_DIR_saveFlux_shared(flux)
