[eos_weaklibInit]
definition =
  call eos_weaklibInit()

#![eos_version]
#!definition =
#!   eos_weaklib


#![eos_versionCall]
#!definition =
#!  if(pMassFrac_and_mask) then
#!     call eos_weaklib(mode, vecLen, eosData, massFrac, mask)
#!  elseif (pMassFrac) then
#!     call eos_weaklib(mode, vecLen, eosData, massFrac)
#!  elseif (pMask) then
#!     call eos_weaklib(mode, vecLen, eosData, mask=mask)
#!  else
#!     call eos_weaklib(mode, vecLen, eosData)
#!  end if


[eos_weaklib]
definition =
  if(pMassFrac_and_mask) then
     call eos_weaklib(mode,vecLen,@M eos_args, massFrac,mask)
  elseif (pMassFrac) then
     call eos_weaklib(mode,vecLen,@M eos_args, massFrac)
  elseif (pMask) then
     call eos_weaklib(mode,vecLen,@M eos_args, mask=mask)
  else
     call eos_weaklib(mode,vecLen, @M eos_args)
  end if

 
[e_ye]
definition =
           if (ye_map /= NONEXISTENT) then
             xYe(n) = solnData(ye_map,i,j,k)
           endif

[eos_args]
definition =
  xPres, xTemp, xDens, xGamc, xEner, xEntr,xAbar,xZbar,xYe


[eos_declare]
definition =
   real, dimension(vecLen), intent(INOUT) :: @M eos_args