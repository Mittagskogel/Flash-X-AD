[eos_hybridInit]
definition =
  call eos_hybridInit()



[eos_energyShift]
definition =
   eosData_ptr(1:vecLen, 1:EOS_NUM) => eosData
   energyShift = eos_hybDeltaE_WL*conv
   ! Redundant yes, but Id rather not have the conditional check
   ! in the loop over the vector
   if (present(massFrac) .and. (NSPECIES .gt. 0)) then
      ! Note: massFrac is indexed oppositely of eosData
      massFrac_ptr(1:NSPECIES, 1:vecLen) => massFrac
      n=1
      @M loop_3d(range)
         energyShift(n) = energyShift(n) - delta*solutionData(ye_map,i,j,k) &
                          - sum(massFrac_ptr(:, n)*eos_hybBoverA)*conv
      @M loop_end_3d 
   else
     @M loop_3d(range)
         energyShift(n) = energyShift(n) - delta*solutionData(ye_map,i,j,k)
     @M loop_end_3d
   end if


